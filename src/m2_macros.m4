define(`lad', `LAD $1')
define(`sad', `SAD $1')
define(`add', `ADD $1')
define(`sub', `SUB $1')
define(`jump', `JMP $1')
define(`jgz', `JGZ $1')
define(`jlz', `JLZ $1')
define(`jze', `JZE $1')
define(`lxd', `LXD $1')
define(`sxd', `SXD $1')
define(`lax', `LAX')
define(`sax', `SAX')
define(`lcd', `LCD $1')
define(`jcc', `JCC')
define(`cal', `CAL $1')
define(`return', `RET')
define(`lai', `LAI')
define(`sai', `SAI')
pushdef(`LBL_PROG', `a')
pushdef(`LBL_JMP', `w')
pushdef(`LBL_JMP', `z')
pushdef(`LBL_JMP', `y')
pushdef(`LBL_JMP', `x')
pushdef(`LBL_JMP', `v')
pushdef(`LBL_JMP', `u')
pushdef(`LBL_JMP', `t')
pushdef(`LBL_JMP', `s')
pushdef(`LBL_JMP', `r')
pushdef(`LBL_JMP', `q')
define(`program', `JMP LBL_PROG')
define(`begin', `LBL_PROG builtin(`popdef', `LBL_PROG')dnl')
define(`ler', `INP $1')
define(`escrever', `OUT $1')
define(`int', `$1 DC $2')
define(`end', `HLT')
define(`end_program', `END')
define(`end_se', `LBL_JMP builtin(`popdef', `LBL_JMP')dnl')
define(`se', `LAD $1
SUB $3 
ifelse(`$2', `menor', `JGZ LBL_JMP 
JZE LBL_JMP', `$2', `menor_igual', `JGZ LBL_JMP',
	`$2', `maior', `JLZ LBL_JMP
JZE LBL_JMP', `$2', `maior_igual', `JLZ LBL_JMP',
	`$2', `igual', `JZE LBL_JMP')')